// <auto-generated />
using System;
using AutomeetBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomeetBackend.Migrations
{
    [DbContext(typeof(UserDbContext))]
    partial class UserDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("AutomeetBackend.DbAdapter", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("ActiveColumns")
                        .HasColumnType("TEXT");

                    b.Property<string>("AdapterType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Columns")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("DbAdapter");

                    b.HasDiscriminator<string>("AdapterType").HasValue("DbAdapter");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AutomeetBackend.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AutomeetBackend.ActiveCampaignAdapter", b =>
                {
                    b.HasBaseType("AutomeetBackend.DbAdapter");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ApiUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("ActiveCampaign");
                });

            modelBuilder.Entity("AutomeetBackend.AttioAdapter", b =>
                {
                    b.HasBaseType("AutomeetBackend.DbAdapter");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Attio");
                });

            modelBuilder.Entity("AutomeetBackend.DbAdapter", b =>
                {
                    b.HasOne("AutomeetBackend.User", null)
                        .WithOne("DbAdapter")
                        .HasForeignKey("AutomeetBackend.DbAdapter", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutomeetBackend.User", b =>
                {
                    b.OwnsOne("AutomeetBackend.Subscription", "Subscription", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("PollFrequency")
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("Subscribed")
                                .HasColumnType("INTEGER");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Subscription")
                        .IsRequired();
                });

            modelBuilder.Entity("AutomeetBackend.User", b =>
                {
                    b.Navigation("DbAdapter");
                });
#pragma warning restore 612, 618
        }
    }
}
